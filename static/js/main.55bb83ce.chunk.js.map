{"version":3,"sources":["components/Navigation.jsx","Store.jsx","Helpers.jsx","components/Post.jsx","components/Search.jsx","components/Posts.jsx","pages/Home.jsx","components/Page.jsx","components/SiteCard.jsx","pages/Source.jsx","pages/Blacklist.jsx","Config.js","pages/About.jsx","Main.js","index.js"],"names":["Navigation","Navbar","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","as","to","icon","faHome","faBook","faTimes","faQuestion","pageConfigs","initialState","posts","config","blacklist","store","createStore","state","action","type","payload","getFromPath","path","resp","data","i","length","determineFileType","file","split","ext","includes","Post","props","useSelector","current_config","full","post","useState","error","preview","displayFull","setState","src","onClick","new_window","window","open","opener","onMouseDown","event","button","Search","tags","page","limit","Form","onSubmit","doSearch","Group","controlId","Label","Control","name","value","onChange","e","target","Button","variant","Posts","dispatch","useDispatch","hasSearched","isLoaded","blacklistedCount","items","preventDefault","fetch","url","URLSearchParams","then","res","json","result","blacklist_count","filtered","filter","all_tag_paths","Object","keys","forEach","key","idx","push","all_tags","current_tags","fetchAllTags","some","item","message","map","Home","Page","children","SiteCard","useCookies","cookies","setCookie","undefined","site","display","descriptors","join","Source","k","Blacklist","init_cookies","toString","removeFromBlacklist","new_blacklist","innerHTML","processed","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","inline","placeholder","ListGroup","programConfig","github","About","service","user","string","href","charAt","toUpperCase","slice","authorLink","Main","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55bb83ce.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Navbar, Nav } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faHome, faBook, faTimes, faQuestion } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Navbar>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/\">\r\n              <FontAwesomeIcon icon={faHome} /> Home\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/source\">\r\n              <FontAwesomeIcon icon={faBook} /> Source\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/blacklist\">\r\n              <FontAwesomeIcon icon={faTimes} /> Blacklist\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/about\">\r\n              <FontAwesomeIcon icon={faQuestion} /> About\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation","import { createStore } from \"redux\"\r\n\r\nconst pageConfigs = {\r\n  \"e621\": {\r\n    \"name\": \"e621\",\r\n    \"display\": \"e621\",\r\n    \"descriptors\": [\"furry\", \"nsfw\"],\r\n    \"url\": {\r\n      \"base\": \"https://e621.net\",\r\n      \"post\": \"https://e621.net/posts.json\",\r\n      \"params\": {\r\n        \"tags\": \"tags\",\r\n        \"page\": \"page\",\r\n        \"limit\": \"limit\"\r\n      }\r\n    },\r\n    \"posts\": [\"posts\"],\r\n    \"file\": {\r\n      \"post\": [\"id\"],\r\n      \"preview\": [\"preview\", \"url\"],\r\n      \"full\": [\"file\", \"url\"]\r\n    },\r\n    \"tags\": {\r\n      \"general\": [\"tags\", \"general\"],\r\n      \"character\": [\"tags\", \"character\"],\r\n      \"copyright\": [\"tags\", \"copyright\"],\r\n      \"artist\": [\"tags\", \"artist\"],\r\n      \"meta\": [\"tags\", \"meta\"],\r\n      \"other\": [\r\n        [\"tags\", \"species\"],\r\n        [\"tags\", \"invalid\"],\r\n        [\"tags\", \"lore\"]\r\n      ]\r\n    }\r\n  },\r\n  \"danbooru\": {\r\n    \"name\": \"danbooru\",\r\n    \"display\": \"Danbooru\",\r\n    \"descriptors\": [\"anime\", \"nsfw\"],\r\n    \"url\": {\r\n      \"base\": \"https://danbooru.donmai.us\",\r\n      \"post\": \"https://danbooru.donmai.us/posts.json\",\r\n      \"params\": {\r\n        \"tags\": \"tags\",\r\n        \"page\": \"page\",\r\n        \"limit\": \"limit\"\r\n      }\r\n    },\r\n    \"posts\": [],\r\n    \"file\": {\r\n      \"post\": [\"id\"],\r\n      \"preview\": [\"preview_file_url\"],\r\n      \"full\": [\"file_url\"]\r\n    },\r\n    \"tags\": {\r\n      \"general\": [\"tag_string_general\"],\r\n      \"character\": [\"tag_string_character\"],\r\n      \"copyright\": [\"tag_string_copyright\"],\r\n      \"artist\": [\"tag_string_artist\"],\r\n      \"meta\": [\"tag_string_meta\"],\r\n      \"other\": []\r\n    }\r\n  },\r\n}\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  config: \"e621\",\r\n  blacklist: []\r\n}\r\n\r\nfunction modifyStore(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"config/modify\":\r\n      return { ...state, config: action.payload }\r\n    case \"posts/set\":\r\n      return { ...state, posts: action.payload }\r\n    case \"blacklist/set\":\r\n      return { ...state, blacklist: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(modifyStore)\r\n\r\nexport { pageConfigs, store }","import React from \"react\"\r\n\r\nconst getFromPath = (path, resp) => {\r\n  let data = resp\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    data = data[path[i]]\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nconst determineFileType = (file) => {\r\n  let path = file.split(\".\")\r\n  let ext = path[path.length - 1]\r\n\r\n  let post_type = \"none\"\r\n\r\n  if ([\"mp4\", \"webm\"].includes(ext)) {\r\n    post_type = \"video\"\r\n  } else if (ext === \"gif\") {\r\n    post_type = \"gif\"\r\n  } else if (ext === \"swf\") {\r\n    post_type = \"flash\"\r\n  } else {\r\n    post_type = \"image\"\r\n  }\r\n\r\n  return post_type\r\n}\r\n\r\nconst capitalizeString = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nconst authorLink = (service, user) => {\r\n  let url = null\r\n\r\n  switch (service) {\r\n    case \"github\":\r\n      url = \"https://github.com/\" + user\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <strong>\r\n        <a href={url}>@{user}</a>\r\n      </strong> on <strong>\r\n        {capitalizeString(service)}\r\n      </strong>\r\n    </span>\r\n  )\r\n}\r\n\r\nconst fetchAllTags = (post, tags) => {\r\n  let all_tag_paths = []\r\n\r\n  Object.keys(tags).forEach((key, idx) => {\r\n    if (key === \"other\") {\r\n      for (let i = 0; i < tags[key].length; i++) {\r\n        all_tag_paths.push(tags[key][i])\r\n      }\r\n    } else {\r\n      all_tag_paths.push(tags[key])\r\n    }\r\n  })\r\n\r\n  let all_tags = []\r\n\r\n  for (let i = 0; i < all_tag_paths.length; i++) {\r\n    let current_tags = getFromPath(all_tag_paths[i], post)\r\n\r\n    if (typeof current_tags === \"string\") {\r\n      all_tags = [...all_tags, ...current_tags.split(\" \")]\r\n    } else {\r\n      all_tags = [...all_tags, ...current_tags]\r\n    }\r\n  }\r\n\r\n  return all_tags\r\n}\r\n\r\nexport {\r\n  getFromPath,\r\n  determineFileType,\r\n  capitalizeString,\r\n  authorLink,\r\n  fetchAllTags\r\n}","import React, { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { pageConfigs } from \"../Store\"\r\nimport { getFromPath, determineFileType } from \"../Helpers\"\r\n\r\nconst Post = (props) => {\r\n  const config = useSelector(store => store.config)\r\n\r\n  let current_config = pageConfigs[config]\r\n  let full = getFromPath(current_config.file.full, props.post)\r\n\r\n  const [state, setState] = useState(full ? {\r\n    error: false,\r\n    post: getFromPath(current_config.file.post, props.post),\r\n    full: full,\r\n    preview: getFromPath(current_config.file.preview, props.post),\r\n    type: determineFileType(full),\r\n    displayFull: false\r\n  } : {\r\n    error: true\r\n  })\r\n\r\n  if (state.error) {\r\n    return null\r\n  }\r\n\r\n  const mouseDownHandler = (event) => {\r\n    if (event.button === 1) {\r\n      const new_window = window.open(state.full)\r\n\r\n      if (new_window) {\r\n        new_window.opener = null\r\n      }\r\n    }\r\n  }\r\n\r\n  const switchQuality = () => {\r\n    if (state.type === \"image\" || state.type === \"gif\") {\r\n      if (state.displayFull) {\r\n        const new_window = window.open(state.full)\r\n\r\n        if (new_window) {\r\n          new_window.opener = null\r\n        }\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          displayFull: true\r\n        })\r\n      }\r\n    } else {\r\n      const new_window = window.open(state.full, \"_blank\", \"noopener,noreferrer\")\r\n\r\n      if (new_window) {\r\n        new_window.opener = null\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <img\r\n        src={state.displayFull ? state.full : state.preview}\r\n        className={state.type}\r\n        onClick={switchQuality}\r\n        onMouseDown={mouseDownHandler}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React, { useState } from \"react\"\r\nimport { Button, Form } from \"react-bootstrap\"\r\n\r\nconst Search = (props) => {\r\n  const [state, setState] = useState({\r\n    tags: \"rating:s\",\r\n    page: 1,\r\n    limit: 25\r\n  })\r\n\r\n  return (\r\n    <div className=\"container mt-5 mb-5\">\r\n      <Form id=\"search-form\" onSubmit={props.doSearch}>\r\n        <Form.Group controlId=\"tags\">\r\n          <Form.Label>Tags</Form.Label>\r\n          <Form.Control\r\n            name=\"tags\"\r\n            type=\"text\"\r\n            value={state.tags}\r\n            onChange={e => setState({ ...state, tags: e.target.value })}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"page\">\r\n          <Form.Label>Page</Form.Label>\r\n          <Form.Control\r\n            name=\"page\"\r\n            type=\"number\"\r\n            value={state.page}\r\n            onChange={e => setState({ ...state, page: e.target.value })}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"limit\">\r\n          <Form.Label>Limit</Form.Label>\r\n          <Form.Control\r\n            name=\"limit\"\r\n            type=\"number\"\r\n            value={state.limit}\r\n            onChange={e => setState({ ...state, limit: e.target.value })}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"mt-2\" variant=\"primary\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useState } from 'react'\r\nimport Post from './Post'\r\nimport Search from './Search'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { pageConfigs } from \"../Store\"\r\nimport { getFromPath, fetchAllTags } from \"../Helpers\"\r\n\r\nconst Posts = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    hasSearched: false,\r\n    isLoaded: false,\r\n    blacklistedCount: 0\r\n  })\r\n\r\n  const items = useSelector(store => store.posts)\r\n  const config = useSelector(store => store.config)\r\n  const blacklist = useSelector(store => store.blacklist)\r\n\r\n  const doSearch = e => {\r\n    e.preventDefault()\r\n\r\n    setState({\r\n      hasSearched: true,\r\n      isLoaded: false\r\n    })\r\n\r\n    let current_config = pageConfigs[config]\r\n\r\n    fetch(current_config.url.post + \"?\" + new URLSearchParams({\r\n      tags: e.target.tags.value,\r\n      page: e.target.page.value,\r\n      limit: e.target.limit.value\r\n    }))\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        let posts = getFromPath(current_config.posts, result)\r\n        let blacklist_count = 0\r\n\r\n        let filtered = posts.filter(post => {\r\n          let tags = fetchAllTags(post, current_config.tags)\r\n\r\n          if (blacklist.some(item => tags.includes(item))) {\r\n            blacklist_count++\r\n            return false\r\n          }\r\n\r\n          return true\r\n        })\r\n\r\n        setState({\r\n          ...state,\r\n          isLoaded: true,\r\n          error: false,\r\n          blacklistedCount: blacklist_count\r\n        })\r\n\r\n        dispatch({ type: \"posts/set\", payload: filtered})\r\n      },\r\n      (error) => {\r\n        setState({\r\n          ...state,\r\n          isLoaded: true,\r\n          error: true\r\n        })\r\n\r\n        dispatch({ type: \"posts/set\", payload: [] })\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Search doSearch={doSearch}/>\r\n      {state.error &&\r\n        <div className=\"error\">\r\n          <p>\r\n            Error: {state.error.message}\r\n          </p>\r\n        </div>\r\n      }\r\n      {!state.isLoaded && state.hasSearched &&\r\n        <div>\r\n          <p className=\"loading\">\r\n            Loading...\r\n          </p>\r\n        </div>\r\n      }\r\n      {state.isLoaded &&\r\n        <div id=\"posts\">\r\n          {items.map(item => (\r\n            <Post post={item}/>\r\n          ))}\r\n        </div>\r\n      }\r\n      {(state.isLoaded && items.length < 1 && !state.error) &&\r\n        <div className=\"error\">\r\n          No posts found. ({state.blacklistedCount} blacklisted posts)\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts","import React from \"react\";\r\n\r\nimport Posts from \"../components/Posts\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Posts />\r\n  )\r\n}\r\n\r\nexport default Home;","import React from \"react\"\r\n\r\nconst Page = (props) => {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page","import React from \"react\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst SiteCard = (props) => {\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(store => store.config)\r\n\r\n  const [cookies, setCookie] = useCookies([\"site\"])\r\n\r\n  if (cookies.site !== undefined && cookies.site !== state) {\r\n    dispatch({ type: \"config/modify\", payload: props.name })\r\n  }\r\n\r\n  const handleClick = e => {\r\n    dispatch({ type: \"config/modify\", payload: props.name })\r\n    setCookie(\"site\", props.name, { path: \"/\" })\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" onClick={handleClick}>\r\n      <div className=\"card-body\">\r\n        {\r\n          state === props.name\r\n            ? <h2><strong>{props.config.display}</strong> (selected)</h2>\r\n            : <h2>{props.config.display}</h2>\r\n        }\r\n        <p>{props.config.descriptors.join(\", \")}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteCard","import React from \"react\"\r\n\r\nimport { pageConfigs } from \"../Store\"\r\n\r\nimport Page from \"../components/Page\"\r\nimport SiteCard from \"../components/SiteCard\"\r\n\r\nconst Source = () => {\r\n  return (\r\n    <Page>\r\n      <h1>Source</h1>\r\n      <p>Choose which site to get posts from.</p>\r\n      {Object.keys(pageConfigs).map((k, i) =>\r\n        <SiteCard key={k} name={k} config={pageConfigs[k]}/>\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Source","import React from \"react\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { Form, Button, ListGroup } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\n\r\nimport Page from \"../components/Page\"\r\n\r\nconst Blacklist = () => {\r\n  const dispatch = useDispatch()\r\n  const blacklist = useSelector(store => store.blacklist)\r\n\r\n  const [cookies, setCookie] = useCookies([\"blacklist\"])\r\n\r\n  if (blacklist.length < 1) {\r\n    if (cookies.blacklist !== undefined) {\r\n      let init_cookies = cookies.blacklist.toString().split(\"|\").filter(item => {\r\n        return (item !== \"\" && item !== undefined)\r\n      })\r\n\r\n      if (init_cookies.length > 0) {\r\n        dispatch({ type: \"blacklist/set\", payload: init_cookies })\r\n      }\r\n    }\r\n  }\r\n\r\n  const addToBlacklist = (e) => {\r\n    e.preventDefault()\r\n\r\n    let tags = e.target.tags.value.split(\" \")\r\n    let processed = []\r\n\r\n    for (let i = 0; i < tags.length; i++) {\r\n      if (tags[i] === \"\" || tags[i] === undefined) {\r\n        continue\r\n      }\r\n\r\n      if (blacklist.includes(tags[i])) {\r\n        toast.error(`'${tags[i]}' is already blacklisted.`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      } else {\r\n        processed.push(tags[i])\r\n      }\r\n    }\r\n\r\n    let new_blacklist = [...blacklist, ...processed]\r\n\r\n\r\n    dispatch({ type: \"blacklist/set\", payload: new_blacklist })\r\n    setCookie(\"blacklist\", new_blacklist.join(\"|\"), { path: \"/\" })\r\n\r\n    e.target.tags.value = null\r\n  }\r\n\r\n  const removeFromBlacklist = (e) => {\r\n    e.preventDefault()\r\n\r\n    let new_blacklist = blacklist.filter(item => item !== e.target.innerHTML)\r\n\r\n    dispatch({ type: \"blacklist/set\", payload: new_blacklist })\r\n    setCookie(\"blacklist\", new_blacklist.join(\"|\"), { path: \"/\" })\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <h1>Blacklist</h1>\r\n      <p>Choose which tags you want to block from your search.</p>\r\n      <Form onSubmit={addToBlacklist} inline>\r\n        <Form.Group controlId=\"formBlacklist\">\r\n          <Form.Control\r\n            className=\"mb-2 mr-sm-2\"\r\n            type=\"text\"\r\n            name=\"tags\"\r\n            placeholder=\"Tag(s) to blacklist...\"\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\" className=\"mb-2\">\r\n            Add\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n      <ListGroup>\r\n        {blacklist.map((item, idx) => (\r\n          <ListGroup.Item variant=\"danger\" key={idx} onClick={removeFromBlacklist}>\r\n            {item}\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n      <ToastContainer/>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Blacklist","const programConfig = {\r\n  name: \"Ōkami\",\r\n  author: {\r\n    github: \"Breath\"\r\n  }\r\n}\r\n\r\nexport { programConfig }","import React from \"react\"\r\n\r\nimport { programConfig } from \"../Config\"\r\nimport { authorLink } from \"../Helpers\"\r\n\r\nimport Page from \"../components/Page\"\r\n\r\nconst About = () => {\r\n  return (\r\n    <Page>\r\n      <h1>About</h1>\r\n      <p>\r\n        <strong>{programConfig.name}</strong> is a simple, easy to use alternative\r\n        to most image gallery's UI. Made using React by {authorLink(\"github\", programConfig.author.github)}.\r\n      </p>\r\n      <h3>To-do</h3>\r\n      <ul>\r\n        <li>Persistent search parameters.</li>\r\n        <li>Add usage tab/section.</li>\r\n        <li>Add <code>order:</code>, <code>date:</code>, etc sliders to search box.</li>\r\n        <li>Create a logo (and add <code>favicon.ico</code> / <code>logo192.png</code>).</li>\r\n      </ul>\r\n      <h3>v0.2.0</h3>\r\n      <ul>\r\n        <li>Implemented blacklist functionality.</li>\r\n        <li>Improved code for cookies.</li>\r\n        <li>Added toast notifications (top right).</li>\r\n        <li>Added FontAwesome icons to the navbar.</li>\r\n      </ul>\r\n      <h3>v0.1.1</h3>\r\n      <ul>\r\n        <li>Renamed <code>Sites</code> page to <code>Source</code>.</li>\r\n        <li>Updated search box on the front page to be more centered.</li>\r\n      </ul>\r\n      <h3>v0.1.0</h3>\r\n      <ul>\r\n        <li>Initial release.</li>\r\n      </ul>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default About","import React from \"react\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\n\r\nimport Navigation from \"./components/Navigation\"\r\n\r\nimport Home from \"./pages/Home\"\r\nimport Source from \"./pages/Source\"\r\nimport Blacklist from \"./pages/Blacklist\"\r\nimport About from \"./pages/About\"\r\n\r\nconst Main = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home}></Route>\r\n        <Route exact path=\"/source\" component={Source}></Route>\r\n        <Route exact path=\"/blacklist\" component={Blacklist}></Route>\r\n        <Route exact path=\"/about\" component={About}></Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Main","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"./css/style.css\"\n\nimport Main from \"./Main\"\nimport { store } from \"./Store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}