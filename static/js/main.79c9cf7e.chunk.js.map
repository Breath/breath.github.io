{"version":3,"sources":["Store.jsx","Config.js","components/Navigation.jsx","Helpers.jsx","components/Page.jsx","pages/About.jsx","pages/Blacklist.jsx","pages/Guide.jsx","components/SiteCard.jsx","pages/Source.jsx","components/Post.jsx","components/Search.jsx","components/Posts.jsx","pages/Home.jsx","Main.js","index.js"],"names":["pageConfigs","initialState","posts","config","blacklist","search","tags","page","limit","store","createStore","state","action","type","payload","programConfig","github","arraySeparator","Navigation","Navbar","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","Item","icon","faHome","faGlobe","faTimes","faBook","faQuestion","getFromPath","path","resp","data","i","length","determineFileType","file","split","ext","includes","Page","props","children","About","service","user","string","url","href","charAt","toUpperCase","slice","authorLink","Blacklist","dispatch","useDispatch","useSelector","useCookies","cookies","setCookie","undefined","init_cookies","toString","filter","item","removeFromBlacklist","e","preventDefault","new_blacklist","target","innerHTML","join","Form","onSubmit","value","processed","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","push","inline","Group","controlId","Control","name","placeholder","Button","variant","ListGroup","map","idx","key","onClick","Guide","Object","keys","k","display","SiteCard","descriptors","Source","Post","current_config","full","post","useState","preview","displayFull","setState","alt","src","new_window","window","open","opener","onMouseDown","event","button","Search","updateSearch","doSearch","Label","onChange","min","Posts","hasSearched","isLoaded","blacklistedCount","items","PostBox","message","search_tags","fetch","URLSearchParams","then","res","json","result","blacklist_count","filtered","all_tag_paths","Array","isArray","forEach","all_tags","current_tags","fetchAllTags","some","Home","Main","site","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79c9cf7e.chunk.js","sourcesContent":["import { createStore } from \"redux\"\r\n\r\nconst pageConfigs = {\r\n  \"e621\": {\r\n    \"name\": \"e621\",\r\n    \"display\": \"e621\",\r\n    \"descriptors\": [\"furry\", \"nsfw\"],\r\n    \"url\": {\r\n      \"base\": \"https://e621.net\",\r\n      \"post\": \"https://e621.net/posts.json\",\r\n      \"params\": {\r\n        \"tags\": \"tags\",\r\n        \"page\": \"page\",\r\n        \"limit\": \"limit\"\r\n      }\r\n    },\r\n    \"posts\": [\"posts\"],\r\n    \"file\": {\r\n      \"post\": [\"id\"],\r\n      \"preview\": [\"preview\", \"url\"],\r\n      \"full\": [\"file\", \"url\"]\r\n    },\r\n    \"tags\": {\r\n      \"general\": [\"tags\", \"general\"],\r\n      \"character\": [\"tags\", \"character\"],\r\n      \"copyright\": [\"tags\", \"copyright\"],\r\n      \"artist\": [\"tags\", \"artist\"],\r\n      \"meta\": [\"tags\", \"meta\"],\r\n      \"other\": [\r\n        [\"tags\", \"species\"],\r\n        [\"tags\", \"invalid\"],\r\n        [\"tags\", \"lore\"]\r\n      ]\r\n    }\r\n  },\r\n  \"danbooru\": {\r\n    \"name\": \"danbooru\",\r\n    \"display\": \"Danbooru\",\r\n    \"descriptors\": [\"anime\", \"nsfw\"],\r\n    \"url\": {\r\n      \"base\": \"https://danbooru.donmai.us\",\r\n      \"post\": \"https://danbooru.donmai.us/posts.json\",\r\n      \"params\": {\r\n        \"tags\": \"tags\",\r\n        \"page\": \"page\",\r\n        \"limit\": \"limit\"\r\n      }\r\n    },\r\n    \"posts\": [],\r\n    \"file\": {\r\n      \"post\": [\"id\"],\r\n      \"preview\": [\"preview_file_url\"],\r\n      \"full\": [\"file_url\"]\r\n    },\r\n    \"tags\": {\r\n      \"general\": [\"tag_string_general\"],\r\n      \"character\": [\"tag_string_character\"],\r\n      \"copyright\": [\"tag_string_copyright\"],\r\n      \"artist\": [\"tag_string_artist\"],\r\n      \"meta\": [\"tag_string_meta\"],\r\n      \"other\": []\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n\r\n  -> Currently disabled due to CORS limitations\r\n\r\n  \"gelbooru\": {\r\n    \"name\": \"gelbooru\",\r\n    \"display\": \"Gelbooru\",\r\n    \"descriptors\": [\"anime\", \"nsfw\"],\r\n    \"url\": {\r\n      \"base\": \"https://gelbooru.com\",\r\n      \"post\": \"https://gelbooru.com/index.php?page=dapi&s=post&q=index&json=1\",\r\n      \"params\": {\r\n        \"tags\": \"tags\",\r\n        \"page\": \"pid\",\r\n        \"limit\": \"limit\"\r\n      }\r\n    },\r\n    \"posts\": [],\r\n    \"file\": {\r\n      \"post\": [\"id\"],\r\n      \"preview\": [\"file_url\"],\r\n      \"full\": [\"file_url\"]\r\n    },\r\n    \"tags\": [\"tags\"]\r\n  }\r\n\r\n*/\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  config: null,\r\n  blacklist: [],\r\n  search: {\r\n    tags: null,\r\n    page: 1,\r\n    limit: 50\r\n  }\r\n}\r\n\r\nfunction modifyStore(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"config/modify\":\r\n      return { ...state, config: action.payload }\r\n    case \"posts/set\":\r\n      return { ...state, posts: action.payload }\r\n    case \"blacklist/set\":\r\n      return { ...state, blacklist: action.payload }\r\n    case \"search/tags\":\r\n      return { ...state, search: { ...state.search, tags: action.payload } }\r\n    case \"search/page\":\r\n      return { ...state, search: { ...state.search, page: action.payload } }\r\n    case \"search/limit\":\r\n      return { ...state, search: { ...state.search, limit: action.payload } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(modifyStore)\r\n\r\nexport { pageConfigs, store }","const programConfig = {\r\n  name: \"Ōkami\",\r\n  author: {\r\n    github: \"Breath\"\r\n  },\r\n  cookies: {\r\n    arraySeparator: \"|\"\r\n  }\r\n}\r\n\r\nexport { programConfig }","import React from \"react\"\r\nimport { Navbar, Nav } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faHome, faBook, faTimes, faQuestion, faGlobe } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport { programConfig } from \"../Config\"\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand as={Link} to=\"/\">{programConfig.name}</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"okamiNavbar\" />\r\n      <Navbar.Collapse id=\"okamiNavbar\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/\">\r\n              <FontAwesomeIcon icon={faHome} /> Home\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/source\">\r\n              <FontAwesomeIcon icon={faGlobe} /> Source\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/blacklist\">\r\n              <FontAwesomeIcon icon={faTimes} /> Blacklist\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/guide\">\r\n              <FontAwesomeIcon icon={faBook} /> Guide\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/about\">\r\n              <FontAwesomeIcon icon={faQuestion} /> About\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation","import React from \"react\"\r\n\r\nconst getFromPath = (path, resp) => {\r\n  let data = resp\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    data = data[path[i]]\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nconst determineFileType = (file) => {\r\n  let path = file.split(\".\")\r\n  let ext = path[path.length - 1]\r\n\r\n  let post_type = \"none\"\r\n\r\n  if ([\"mp4\", \"webm\"].includes(ext)) {\r\n    post_type = \"video\"\r\n  } else if (ext === \"gif\") {\r\n    post_type = \"gif\"\r\n  } else if (ext === \"swf\") {\r\n    post_type = \"flash\"\r\n  } else {\r\n    post_type = \"image\"\r\n  }\r\n\r\n  return post_type\r\n}\r\n\r\nconst capitalizeString = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nconst authorLink = (service, user) => {\r\n  let url = null\r\n\r\n  switch (service) {\r\n    case \"github\":\r\n      url = \"https://github.com/\" + user\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <strong>\r\n        <a href={url}>@{user}</a>\r\n      </strong> on <strong>\r\n        {capitalizeString(service)}\r\n      </strong>\r\n    </span>\r\n  )\r\n}\r\n\r\nconst fetchAllTags = (post, tags) => {\r\n  let all_tag_paths = []\r\n\r\n  if (!Array.isArray(tags)) {\r\n    Object.keys(tags).forEach((key, idx) => {\r\n      if (key === \"other\") {\r\n        for (let i = 0; i < tags[key].length; i++) {\r\n          all_tag_paths.push(tags[key][i])\r\n        }\r\n      } else {\r\n        all_tag_paths.push(tags[key])\r\n      }\r\n    })\r\n\r\n    let all_tags = []\r\n\r\n    for (let i = 0; i < all_tag_paths.length; i++) {\r\n      let current_tags = getFromPath(all_tag_paths[i], post)\r\n\r\n      if (typeof current_tags === \"string\") {\r\n        all_tags = [...all_tags, ...current_tags.split(\" \")]\r\n      } else {\r\n        all_tags = [...all_tags, ...current_tags]\r\n      }\r\n    }\r\n\r\n    return all_tags\r\n  } else {\r\n    return getFromPath(tags, post)\r\n  }\r\n}\r\n\r\nexport {\r\n  getFromPath,\r\n  determineFileType,\r\n  capitalizeString,\r\n  authorLink,\r\n  fetchAllTags\r\n}","import React from \"react\"\r\n\r\nconst Page = (props) => {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page","import React from \"react\"\r\n\r\nimport { programConfig } from \"../Config\"\r\nimport { authorLink } from \"../Helpers\"\r\n\r\nimport Page from \"../components/Page\"\r\n\r\nconst About = () => {\r\n  return (\r\n    <Page>\r\n      <h1>About</h1>\r\n      <p>\r\n        <strong>{programConfig.name}</strong> is a simple, easy to use alternative\r\n        to most image gallery's UI. Made using React by {authorLink(\"github\", programConfig.author.github)}.\r\n      </p>\r\n      <h3>To-do</h3>\r\n      <ul>\r\n        <li>Implement pagination feature to the home page</li>\r\n        <li>Add <code>order:</code>, <code>date:</code>, etc sliders to search box</li>\r\n        <li>Create a logo (and add <code>favicon.ico</code> / <code>logo192.png</code>)</li>\r\n      </ul>\r\n      <h3>v0.2.2</h3>\r\n      <ul>\r\n        <li>Added a logo (Times New Roman Ō)</li>\r\n        <li>Improved wording of the guide and added more help</li>\r\n        <li>Implemented persistent search parameters</li>\r\n        <li>Fixed an issue with the navbar not collapsing</li>\r\n        <li>Fixed cookies for the source page not saving unless you visited the page</li>\r\n      </ul>\r\n      <h3>v0.2.1</h3>\r\n      <ul>\r\n        <li>Added brand name to the navbar</li>\r\n        <li>Added a guide page on how to use the site</li>\r\n        <li>Improved code for posts page</li>\r\n        <li>...and other minor improvements</li>\r\n      </ul>\r\n      <h3>v0.2.0</h3>\r\n      <ul>\r\n        <li>Implemented blacklist functionality</li>\r\n        <li>Improved code for cookies</li>\r\n        <li>Added toast notifications (top right)</li>\r\n        <li>Added FontAwesome icons to the navbar</li>\r\n      </ul>\r\n      <h3>v0.1.1</h3>\r\n      <ul>\r\n        <li>Renamed <code>Sites</code> page to <code>Source</code></li>\r\n        <li>Updated search box on the front page to be more centered</li>\r\n      </ul>\r\n      <h3>v0.1.0</h3>\r\n      <ul>\r\n        <li>Initial release</li>\r\n      </ul>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default About","import React from \"react\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { Form, Button, ListGroup } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\n\r\nimport { programConfig } from \"../Config\"\r\n\r\nimport Page from \"../components/Page\"\r\n\r\nconst Blacklist = () => {\r\n  const dispatch = useDispatch()\r\n  const blacklist = useSelector(store => store.blacklist)\r\n\r\n  const [cookies, setCookie] = useCookies([\"blacklist\"])\r\n\r\n  if (blacklist.length < 1) {\r\n    if (cookies.blacklist !== undefined) {\r\n      let init_cookies = cookies.blacklist.toString().split(programConfig.cookies.arraySeparator).filter(item => {\r\n        return (item !== \"\" && item !== undefined)\r\n      })\r\n\r\n      if (init_cookies.length > 0) {\r\n        dispatch({ type: \"blacklist/set\", payload: init_cookies })\r\n      }\r\n    }\r\n  }\r\n\r\n  const addToBlacklist = (e) => {\r\n    e.preventDefault()\r\n\r\n    let tags = e.target.tags.value.split(\" \")\r\n    let processed = []\r\n\r\n    for (let i = 0; i < tags.length; i++) {\r\n      if (tags[i] === \"\" || tags[i] === undefined) {\r\n        continue\r\n      }\r\n\r\n      if (blacklist.includes(tags[i])) {\r\n        toast.error(`'${tags[i]}' is already blacklisted.`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      } else {\r\n        processed.push(tags[i])\r\n      }\r\n    }\r\n\r\n    let new_blacklist = [...blacklist, ...processed]\r\n\r\n    dispatch({ type: \"blacklist/set\", payload: new_blacklist })\r\n    setCookie(\"blacklist\", new_blacklist.join(programConfig.cookies.arraySeparator), { path: \"/\" })\r\n\r\n    e.target.tags.value = null\r\n  }\r\n\r\n  const removeFromBlacklist = (e) => {\r\n    e.preventDefault()\r\n\r\n    let new_blacklist = blacklist.filter(item => item !== e.target.innerHTML)\r\n\r\n    dispatch({ type: \"blacklist/set\", payload: new_blacklist })\r\n    setCookie(\"blacklist\", new_blacklist.join(programConfig.cookies.arraySeparator), { path: \"/\" })\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <h1>Blacklist</h1>\r\n      <p>Choose which tags you want to block from your search. Separate multiple tags using a space, such as: <code>blocked_tag_one blocked_tag_two</code></p>\r\n      <Form onSubmit={addToBlacklist} inline>\r\n        <Form.Group controlId=\"formBlacklist\">\r\n          <Form.Control\r\n            className=\"mb-2 mr-sm-2\"\r\n            type=\"text\"\r\n            name=\"tags\"\r\n            placeholder=\"Tags to blacklist...\"\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\" className=\"mb-2\">\r\n            Add\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n      <ListGroup>\r\n        {blacklist.map((item, idx) => (\r\n          <ListGroup.Item variant=\"danger\" key={idx} onClick={removeFromBlacklist}>\r\n            {item}\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n      <ToastContainer/>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Blacklist","import React from \"react\"\r\n\r\nimport { pageConfigs } from \"../Store\"\r\nimport Page from \"../components/Page\"\r\n\r\nconst Guide = () => {\r\n  return (\r\n    <Page>\r\n      <h1>Guide</h1>\r\n      <h3>Home</h3>\r\n      <p>\r\n        When you first go on the site you will be greeted with the home page.\r\n        From here you will be able to search for posts using the various input\r\n        boxes. Enter in a few phrases of what you want (for instance, <code>order:score\r\n        rating:s date:month</code> will find you the highest ranked SFW posts in\r\n        the last month for most image sites), then click the blue \"search\" button\r\n        to find posts.\r\n      </p>\r\n      <p>\r\n        Once the previews load, you can then click on a post again to load the\r\n        high quality version of it. If an item is a video or Flash file, it will\r\n        open in a separate tab.\r\n      </p>\r\n      <h3>Source</h3>\r\n      <p>\r\n        On the source page you can change where the app gets posts from. Currently\r\n        the site supports the following sources officially:\r\n      </p>\r\n      <ul>\r\n        {Object.keys(pageConfigs).map((k, i) =>\r\n          <li>{pageConfigs[k].display}</li>\r\n        )}\r\n      </ul>\r\n      <p>\r\n        Simply click on the card of the site you want to use, then head back to\r\n        the home page and search. This value will be saved across site visits if\r\n        you have cookies enabled.\r\n      </p>\r\n      <h3>Blacklist</h3>\r\n      <p>\r\n        If you want to block out certain posts from showing up you can block them\r\n        based on the tags they have in the Blacklist tab. Simply type in the tags\r\n        you want to block out and press the blue \"add\" button. These values will\r\n        be saved across site visits if you have cookies enabled.\r\n      </p>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Guide","import React from \"react\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst SiteCard = (props) => {\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(store => store.config)\r\n\r\n  const [ , setCookie] = useCookies([\"site\"])\r\n\r\n  const handleClick = (e) => {\r\n    dispatch({ type: \"config/modify\", payload: props.name })\r\n    setCookie(\"site\", props.name, { path: \"/\" })\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" onClick={handleClick}>\r\n      <div className=\"card-body\">\r\n        {\r\n          state === props.name\r\n            ? <h2><strong>{props.config.display}</strong> (selected)</h2>\r\n            : <h2>{props.config.display}</h2>\r\n        }\r\n        <p>{props.config.descriptors.join(\", \")}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteCard","import React from \"react\"\r\n\r\nimport { pageConfigs } from \"../Store\"\r\n\r\nimport Page from \"../components/Page\"\r\nimport SiteCard from \"../components/SiteCard\"\r\n\r\nconst Source = () => {\r\n  return (\r\n    <Page>\r\n      <h1>Source</h1>\r\n      <p>Choose which site to get posts from.</p>\r\n      {Object.keys(pageConfigs).map((k, i) =>\r\n        <SiteCard key={k} name={k} config={pageConfigs[k]}/>\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Source","import React, { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { pageConfigs } from \"../Store\"\r\nimport { getFromPath, determineFileType } from \"../Helpers\"\r\n\r\nconst Post = (props) => {\r\n  const config = useSelector(store => store.config)\r\n\r\n  let current_config = pageConfigs[config]\r\n  let full = getFromPath(current_config.file.full, props.post)\r\n\r\n  const [state, setState] = useState(full ? {\r\n    error: false,\r\n    post: getFromPath(current_config.file.post, props.post),\r\n    full: full,\r\n    preview: getFromPath(current_config.file.preview, props.post),\r\n    type: determineFileType(full),\r\n    displayFull: false\r\n  } : {\r\n    error: true\r\n  })\r\n\r\n  if (state.error) {\r\n    return null\r\n  }\r\n\r\n  const mouseDownHandler = (event) => {\r\n    if (event.button === 1) {\r\n      const new_window = window.open(state.full)\r\n\r\n      if (new_window) {\r\n        new_window.opener = null\r\n      }\r\n    }\r\n  }\r\n\r\n  const switchQuality = () => {\r\n    if (state.type === \"image\" || state.type === \"gif\") {\r\n      if (state.displayFull) {\r\n        const new_window = window.open(state.full)\r\n\r\n        if (new_window) {\r\n          new_window.opener = null\r\n        }\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          displayFull: true\r\n        })\r\n      }\r\n    } else {\r\n      const new_window = window.open(state.full, \"_blank\", \"noopener,noreferrer\")\r\n\r\n      if (new_window) {\r\n        new_window.opener = null\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <img\r\n        alt=\"\"\r\n        src={state.displayFull ? state.full : state.preview}\r\n        className={state.type}\r\n        onClick={switchQuality}\r\n        onMouseDown={mouseDownHandler}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Button, Form } from \"react-bootstrap\"\r\n\r\nconst Search = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [state, setState] = useState({\r\n    tags: null,\r\n    page: 1,\r\n    limit: 50\r\n  })\r\n\r\n  const search = useSelector(store => store.search)\r\n\r\n  const updateSearch = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n    dispatch({ type: `search/${e.target.name}`, payload: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5 mb-5\">\r\n      <Form id=\"search-form\" onSubmit={props.doSearch}>\r\n        <Form.Group controlId=\"tags\">\r\n          <Form.Label>Tags</Form.Label>\r\n          <Form.Control\r\n            name=\"tags\"\r\n            type=\"text\"\r\n            value={state.tags}\r\n            placeholder=\"rating:s\"\r\n            onChange={updateSearch}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"page\">\r\n          <Form.Label>Page</Form.Label>\r\n          <Form.Control\r\n            name=\"page\"\r\n            type=\"number\"\r\n            value={state.page}\r\n            min={1}\r\n            onChange={updateSearch}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"limit\">\r\n          <Form.Label>Limit</Form.Label>\r\n          <Form.Control\r\n            name=\"limit\"\r\n            type=\"number\"\r\n            min={1}\r\n            value={state.limit}\r\n            onChange={updateSearch}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"mt-2\" variant=\"primary\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\n\r\nimport Post from \"./Post\"\r\nimport Search from \"./Search\"\r\nimport { pageConfigs } from \"../Store\"\r\nimport { getFromPath, fetchAllTags } from \"../Helpers\"\r\n\r\nconst Posts = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    hasSearched: false,\r\n    isLoaded: false,\r\n    blacklistedCount: 0\r\n  })\r\n\r\n  const items = useSelector(store => store.posts)\r\n  const config = useSelector(store => store.config)\r\n  const blacklist = useSelector(store => store.blacklist)\r\n\r\n  const doSearch = (e) => {\r\n    e.preventDefault()\r\n\r\n    setState({\r\n      ...state,\r\n      hasSearched: true,\r\n      isLoaded: false\r\n    })\r\n\r\n    let current_config = pageConfigs[config]\r\n    let search_tags = e.target.tags.value\r\n\r\n    if (search_tags === \"\") {\r\n      search_tags = \"rating:s\"\r\n    }\r\n\r\n    fetch(current_config.url.post + \"?\" + new URLSearchParams({\r\n      tags: search_tags,\r\n      page: e.target.page.value,\r\n      limit: e.target.limit.value\r\n    }))\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        let posts = getFromPath(current_config.posts, result)\r\n        let blacklist_count = 0\r\n\r\n        let filtered = posts.filter(post => {\r\n          let tags = fetchAllTags(post, current_config.tags)\r\n\r\n          if (blacklist.some(item => tags.includes(item))) {\r\n            blacklist_count++\r\n            return false\r\n          }\r\n\r\n          return true\r\n        })\r\n\r\n        setState({\r\n          ...state,\r\n          isLoaded: true,\r\n          error: false,\r\n          blacklistedCount: blacklist_count\r\n        })\r\n        dispatch({ type: \"posts/set\", payload: filtered})\r\n\r\n        if (state.blacklistedCount > 0) {\r\n          toast.error(`${state.blacklistedCount} posts were blocked.`, {\r\n            position: \"top-right\",\r\n            autoClose: 4000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          })\r\n        }\r\n      },\r\n      (error) => {\r\n        setState({\r\n          ...state,\r\n          isLoaded: true,\r\n          error: true\r\n        })\r\n\r\n        dispatch({ type: \"posts/set\", payload: [] })\r\n      }\r\n    )\r\n  }\r\n\r\n  const PostBox = (props) => {\r\n    if (state.error) {\r\n      return (\r\n        <div className=\"error\">\r\n          Error: {state.error.message}\r\n        </div>\r\n      )\r\n    } else if (!state.isLoaded && state.hasSearched) {\r\n      return (\r\n        <div className=\"loading\">\r\n            Loading...\r\n        </div>\r\n      )\r\n    } else if (state.isLoaded && items.length < 1 && !state.error) {\r\n      return (\r\n        <div className=\"error\">\r\n          No posts were found. ({state.blacklistedCount} posts were blacklisted)\r\n        </div>\r\n      )\r\n    } else if (state.isLoaded) {\r\n      return (\r\n        <div>\r\n          <div id=\"posts\">\r\n            {props.items.map(item => (\r\n              <Post post={item}/>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (<div></div>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Search doSearch={doSearch} />\r\n      <PostBox items={items} />\r\n      <ToastContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts","import React from \"react\";\r\n\r\nimport Posts from \"../components/Posts\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Posts />\r\n  )\r\n}\r\n\r\nexport default Home;","import React from \"react\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport { pageConfigs } from \"./Store\"\r\n\r\nimport Navigation from \"./components/Navigation\"\r\n\r\nimport About from \"./pages/About\"\r\nimport Blacklist from \"./pages/Blacklist\"\r\nimport Guide from \"./pages/Guide\"\r\nimport Source from \"./pages/Source\"\r\nimport Home from \"./pages/Home\"\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch()\r\n  const config = useSelector(store => store.config)\r\n\r\n  const [cookies, ] = useCookies([\"site\"])\r\n\r\n  if (config === null) {\r\n    if (cookies.site !== undefined) {\r\n      dispatch({ type: \"config/modify\", payload: cookies.site })\r\n    } else {\r\n      dispatch({ type: \"config/modify\", payload: Object.keys(pageConfigs)[0] })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home}></Route>\r\n        <Route exact path=\"/source\" component={Source}></Route>\r\n        <Route exact path=\"/blacklist\" component={Blacklist}></Route>\r\n        <Route exact path=\"/guide\" component={Guide}></Route>\r\n        <Route exact path=\"/about\" component={About}></Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Main","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"./css/style.css\"\n\nimport Main from \"./Main\"\nimport { store } from \"./Store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}